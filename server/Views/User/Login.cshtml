@model server.Models.Validation.LoginUserForm
@{
    ViewData["Title"] = "Login";
    string returnUrl = (string)ViewData["ReturnUrl"];
}

<div class="centered rounded text-center">
    <section class="row">
        <div class="col">
            <h1>Sign In</h1>
        </div>
    </section>
    <section class="row">
        <div class="col-lg-3"></div>
        <div class="col-lg-6">
            @using (Html.BeginForm(FormMethod.Post, new { @id = "LoginForm" }))
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName)
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @PlaceHolder = "User Name", @autofocus = "true"})
                    @Html.ValidationMessageFor(m => m.UserName)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password)
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @PlaceHolder = "Password"})
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
                <input type="submit" class="btn btn-primary" value="Sign In">
                <a class="text-light btn btn-success" asp-area="" asp-controller="User" asp-action="CreateNewUser"
                asp-route-ReturnUrl="@returnUrl">Create User</a>
            }
        </div>
        <div class="col-lg-3"></div>
    </section>
</div>

@section Scripts {
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}